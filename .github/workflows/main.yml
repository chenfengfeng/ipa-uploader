# 工作流名称
name: 上传 IPA 到 App Store

# 触发条件
on:
  workflow_dispatch:
    inputs:
      # 输入框一：让用户指定 Release 标签
      release_tag:
        description: '要上传的包名'
        required: true
        type: string
      # 输入框二，让用户手动输入环境名称
      target_environment:
        description: '输入本次上传使用的环境名称'
        required: true
        type: string

# 定义具体的工作任务
jobs:
  upload:
    # 这里会动态地使用您输入的任何环境名称
    environment: ${{ github.event.inputs.target_environment }}
    
    # 指定运行环境为最新的 macOS
    runs-on: macos-latest

    # 定义任务中的各个步骤
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 安装依赖工具
        run: brew install gh

      - name: 下载 IPA 文件
        run: |
          DOWNLOAD_URL=$(gh release view ${{ github.event.inputs.release_tag }} --json assets | jq -r '.assets[] | select(.name | endswith(".ipa")) | .url')
          if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" == "null" ]; then
            echo "错误：无法获取到 .ipa 文件的下载链接。"
            exit 1
          fi
          curl -L -o app.ipa "$DOWNLOAD_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 验证 IPA 文件是否下载成功
        run: ls -lh *.ipa

      # 关键修正：创建符合苹果官方命名规则的密钥文件
      - name: 创建 API 密钥文件
        run: |
          mkdir -p ~/private_keys
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > ~/private_keys/AuthKey_${{ secrets.KEY_ID }}.p8

      # 上传 IPA 到 App Store Connect
      - name: 上传 IPA 到 App Store Connect
        run: |
          IPA_PATH=$(find "$PWD" -name "*.ipa" | head -n 1)
          xcrun altool --upload-app \
            --file "$IPA_PATH" \
            --type ios \
            --apiKey ${{ secrets.KEY_ID }} \
            --apiIssuer ${{ secrets.ISSUER_ID }}
        env:
          API_PRIVATE_KEYS_DIR: "~/private_keys"
